version: "3"
services:
  filestash:
    container_name: filestash
    #image: docker-mirror.kubarcloud.com/machines/filestash
    image: machines/filestash
    volumes:
      - ./data/filestash:/app/data
    environment:
    - APPLICATION_URL=file.9craft.ir
    ports:
    - 8334:8334
    dns:
      - 192.168.1.2
    networks:
      - backend
      - minecraft
    restart: always

  ftpd_server:
    #build: .
    #image: hub.hamdocker.ir/stilliard/pure-ftpd
    image: testing:vvv
    container_name: pure-ftpd
    environment:
    - FTP_MAX_CLIENTS=100
    - FTP_USER_UID=1001
    - FTP_USER_GID=1001
    - FTP_PASSIVE_PORTS=4200:4300
    ports:
      - 127.0.0.1:20:20
      - 127.0.0.1:21:21
      - 4200-4300:4200-4300
    networks:
      - backend
    volumes:
      - /opt/user_data:/opt
      - ftp-data:/etc/pure-ftpd/
      - ./new_user.sh:/bin/new_user.sh
      - ./del_user.sh:/bin/del_user.sh
    restart: always


  prometheus:
    image: hub.hamdocker.ir/prom/prometheus:v2.28.1
    container_name: prometheus
    environment:
      TZ: Asia/Tehran
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus/prometheus:/prometheus
      - ./configs/prometheus/rules.yml:/etc/prometheus/rules.yml
      - /etc/hosts:/etc/hosts
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    user: root
    ports:
      - 0.0.0.0:9090:9090
    dns:
      - 192.168.1.2
    networks:
      - backend
      - minecraft
    restart: always


  alertmanager:
    image: hub.hamdocker.ir/prom/alertmanager
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./configs/prometheus/alertmanager.yml:/etc/alertmanager/config.yml
      - /etc/hosts:/etc/hosts
    command:
      - '--config.file=/etc/alertmanager/config.yml'

  grafana:
    image: hub.hamdocker.ir/grafana/grafana:8.0.6
    container_name: grafana
    hostname: grafana
    user: root
    environment:
      TZ: Asia/Tehran
    volumes:
      - ./data/grafana:/var/lib/grafana
    ports:
      - 0.0.0.0:3000:3000
    networks:
      - backend
    restart: always


  nginx:
    image: hub.hamdocker.ir/nginx:latest
    container_name: nginx
    ports:
      - 185.181.180.153:80:80
      - 185.181.180.153:443:443
      #- 127.0.0.1:80:80
      #- 127.0.0.1:443:443

    volumes:
      - ../frontend-dists/dist:/usr/share/nginx/html
      - ./configs/nginx/servers.conf:/etc/nginx/conf.d/default.conf
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /home/seyed/front:/front
      - /home/seyed/front/build2:/front2

    networks:
      - backend
      - radio
    environment:
      TZ: Asia/Tehran
      PUID: 1000
      PGID: 1000
    cap_add:
      - SYS_NICE
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    restart: always


  porty_nginx:
    image: hub.hamdocker.ir/nginx:latest
    container_name: porty_nginx
    ports:
      - "45000-45010:45000-45010"
    volumes:
      - ./configs/nginx/porty_nginx_stream.conf:/etc/nginx/stream.d/s.conf
      - ./configs/nginx/porty_nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend
      - radio
      - minecraft
    environment:
      TZ: Asia/Tehran
      PUID: 1000
      PGID: 1000
    cap_add:
      - SYS_NICE
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    restart: always


  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
  dns:
    image: docker-mirror.kubarcloud.com/teddysun/xray
    container_name: dns
    restart: always
    networks:
      - minecraft
    volumes:
      - ./configs/dns.json:/etc/xray/config.json
    ports:
      - "192.168.1.2:53:53/tcp"
      - "192.168.1.2:53:53/udp"
    dns:
      - 192.168.1.3
  registry:
    image: docker-mirror.kubarcloud.com/registry:2
    container_name: my-registry-daemon
    restart: always
    ports:
      - "192.168.1.2:5050:5000"
    volumes:
      - registry-data:/var/lib/registry

volumes:
  ftp-data:
  registry-data:

networks:
  minecraft:
    external:
      name: minecraft
  backend:
    external:
      name: backend
  radio:
    external:
      name: radio
